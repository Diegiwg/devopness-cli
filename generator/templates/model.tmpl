package model

{{- if eq .Model.Type "string" }}

type {{ .Model.Name }} string
{{- end }}

{{- if eq .Model.Type "enum" }}

type {{ .Model.Name }} int

const (
{{- range .Model.EnumValues }}
    {{ $.Model.Name }}{{ camelcase . }} {{ $.Model.Name }} = iota
{{- end }}
)

func (s {{ .Model.Name }}) String() string {
    switch s {
    {{ range .Model.EnumValues }}
    case {{ $.Model.Name }}{{ camelcase . }}:
        return "{{ . }}"
    {{ end }}
    default:
        return "Unknown"
    }
}
{{- end}}

{{- if eq .Model.Type "array" }}

type {{ .Model.Name }} []{{ .Model.ArrayType }}

{{- end }}

{{- if eq .Model.Type "object" }}

type {{ .Model.Name }} struct{
    {{- range .Model.Properties }}
        {{- if .Ref }}
            {{ camelcase .Name }} {{ .Ref }} `json:"{{ .Name }}"`
        {{- else }}
            {{ camelcase .Name }} {{ .Type }} `json:"{{ .Name }}"`
        {{- end }}
    {{- end}}
}

{{- end }}

{{- if eq .Model.Type "oneof" }}

type {{ .Model.Name }} interface{}

{{- end }}

{{- if eq .Model.Type "unknown" }}

type {{ .Model.Name }} interface{}

{{- end }}